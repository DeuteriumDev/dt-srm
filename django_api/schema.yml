openapi: 3.0.3
info:
  title: Graph Table API
  version: 1.0.0
  description: invoice tables unleashed
paths:
  /api/v1/answers/:
    get:
      operationId: answers_list
      parameters:
      - in: query
        name: description
        schema:
          type: string
      - in: query
        name: image
        schema:
          type: string
      - in: query
        name: index
        schema:
          type: integer
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: title
        schema:
          type: string
      tags:
      - answers
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAnswerList'
          description: ''
    post:
      operationId: answers_create
      tags:
      - answers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnswerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AnswerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AnswerRequest'
        required: true
      security:
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
          description: ''
  /api/v1/answers/{id}/:
    get:
      operationId: answers_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this answer.
        required: true
      tags:
      - answers
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
          description: ''
    put:
      operationId: answers_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this answer.
        required: true
      tags:
      - answers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnswerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AnswerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AnswerRequest'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
          description: ''
    patch:
      operationId: answers_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this answer.
        required: true
      tags:
      - answers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAnswerRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAnswerRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAnswerRequest'
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Answer'
          description: ''
    delete:
      operationId: answers_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this answer.
        required: true
      tags:
      - answers
      security:
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/documents/:
    get:
      operationId: DocumentsList
      parameters:
      - in: query
        name: created__gte
        schema:
          type: string
      - in: query
        name: created__lte
        schema:
          type: string
      - in: query
        name: doc_type__in
        schema:
          type: string
      - in: query
        name: id__exact
        schema:
          type: string
      - in: query
        name: name__contains
        schema:
          type: string
      - in: query
        name: name__exact
        schema:
          type: string
      - in: query
        name: ordering
        schema:
          type: string
          enum:
          - -created
          - -doc_type
          - -id
          - -name
          - -parent
          - -updated
          - created
          - doc_type
          - id
          - name
          - parent
          - updated
      - in: query
        name: page
        schema:
          type: integer
      - in: query
        name: parent__exact
        schema:
          type: string
      - in: query
        name: parent__isnull
        schema:
          type: string
      - in: query
        name: updated__gte
        schema:
          type: string
      - in: query
        name: updated__lte
        schema:
          type: string
      tags:
      - documents
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                required:
                - count
                - results
                - breadcrumbs
                properties:
                  count:
                    type: integer
                    example: 123
                  next:
                    type: integer
                    nullable: true
                    example: 2
                  previous:
                    type: integer
                    nullable: true
                    example: 1
                  breadcrumbs:
                    type: array
                    items:
                      id:
                        type: string
                        format: uuid
                        readOnly: true
                      name:
                        type: string
                        readOnly: true
                  results:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          format: uuid
                          readOnly: true
                        name:
                          type: string
                          readOnly: true
                        created:
                          type: string
                          format: date-time
                          readOnly: true
                        updated:
                          type: string
                          format: date-time
                          readOnly: true
                        doc_type:
                          type: string
                          readOnly: true
                        tags:
                          type: array
                          readOnly: true
                          items:
                            type: string
                            readOnly: true
                        parent:
                          type: object
                          nullable: true
                          properties:
                            id:
                              type: string
                              format: uuid
                              readOnly: true
                            name:
                              type: string
                              readOnly: true
                      required:
                      - created
                      - id
                      - name
                      - updated
                      - doc_type
                      - tags
                      - parent
          description: ''
  /api/v1/folders/:
    get:
      operationId: folders_list
      parameters:
      - in: query
        name: created
        schema:
          type: string
          format: date-time
      - in: query
        name: description
        schema:
          type: string
      - in: query
        name: favorite
        schema:
          type: boolean
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - in: query
        name: inherit_permissions
        schema:
          type: boolean
      - in: query
        name: name
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: parent
        schema:
          type: string
          format: uuid
      - name: size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: updated
        schema:
          type: string
          format: date-time
      tags:
      - folders
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFolderList'
          description: ''
    post:
      operationId: folders_create
      tags:
      - folders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FolderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FolderRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FolderRequest'
        required: true
      security:
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
          description: ''
  /api/v1/folders/{id}/:
    get:
      operationId: folders_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this folder.
        required: true
      tags:
      - folders
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
          description: ''
    put:
      operationId: folders_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this folder.
        required: true
      tags:
      - folders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FolderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FolderRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FolderRequest'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
          description: ''
    patch:
      operationId: folders_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this folder.
        required: true
      tags:
      - folders
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedFolderRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedFolderRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedFolderRequest'
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
          description: ''
    delete:
      operationId: folders_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this folder.
        required: true
      tags:
      - folders
      security:
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/kits/:
    get:
      operationId: kits_list
      parameters:
      - in: query
        name: created
        schema:
          type: string
          format: date-time
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - in: query
        name: inherit_permissions
        schema:
          type: boolean
      - in: query
        name: name
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - in: query
        name: parent
        schema:
          type: string
          format: uuid
      - name: size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: start
        schema:
          type: string
          format: uuid
      - in: query
        name: updated
        schema:
          type: string
          format: date-time
      tags:
      - kits
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedKitList'
          description: ''
    post:
      operationId: kits_create
      tags:
      - kits
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KitRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/KitRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/KitRequest'
        required: true
      security:
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Kit'
          description: ''
  /api/v1/kits/{id}/:
    get:
      operationId: kits_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this kit.
        required: true
      tags:
      - kits
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Kit'
          description: ''
    put:
      operationId: kits_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this kit.
        required: true
      tags:
      - kits
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KitRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/KitRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/KitRequest'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Kit'
          description: ''
    patch:
      operationId: kits_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this kit.
        required: true
      tags:
      - kits
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedKitRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedKitRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedKitRequest'
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Kit'
          description: ''
    delete:
      operationId: kits_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this kit.
        required: true
      tags:
      - kits
      security:
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/organizations/:
    get:
      operationId: organizations_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - organizations
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrganizationList'
          description: ''
    post:
      operationId: organizations_create
      tags:
      - organizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganizationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationRequest'
        required: true
      security:
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
  /api/v1/organizations/{id}/:
    get:
      operationId: organizations_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this organization.
        required: true
      tags:
      - organizations
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
    put:
      operationId: organizations_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this organization.
        required: true
      tags:
      - organizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganizationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationRequest'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
    patch:
      operationId: organizations_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this organization.
        required: true
      tags:
      - organizations
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedOrganizationRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedOrganizationRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedOrganizationRequest'
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Organization'
          description: ''
    delete:
      operationId: organizations_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this organization.
        required: true
      tags:
      - organizations
      security:
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/questions/:
    get:
      operationId: questions_list
      parameters:
      - in: query
        name: answers
        schema:
          type: array
          items:
            type: integer
        explode: true
        style: form
      - in: query
        name: created
        schema:
          type: string
          format: date-time
      - in: query
        name: description
        schema:
          type: string
      - in: query
        name: id
        schema:
          type: string
          format: uuid
      - in: query
        name: image
        schema:
          type: string
      - in: query
        name: inherit_permissions
        schema:
          type: boolean
      - in: query
        name: next
        schema:
          type: string
          format: uuid
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: title
        schema:
          type: string
      - in: query
        name: updated
        schema:
          type: string
          format: date-time
      tags:
      - questions
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedQuestionList'
          description: ''
    post:
      operationId: questions_create
      tags:
      - questions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QuestionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QuestionRequest'
      security:
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
  /api/v1/questions/{id}/:
    get:
      operationId: questions_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this question.
        required: true
      tags:
      - questions
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
    put:
      operationId: questions_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this question.
        required: true
      tags:
      - questions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QuestionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QuestionRequest'
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
    patch:
      operationId: questions_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this question.
        required: true
      tags:
      - questions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedQuestionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedQuestionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedQuestionRequest'
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
    delete:
      operationId: questions_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this question.
        required: true
      tags:
      - questions
      security:
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/users/:
    get:
      operationId: users_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - users
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedCustomUserList'
          description: ''
    post:
      operationId: users_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomUserRequest'
        required: true
      security:
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
  /api/v1/users/{id}/:
    get:
      operationId: users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - users
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
    put:
      operationId: users_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CustomUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CustomUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CustomUserRequest'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
    patch:
      operationId: users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedCustomUserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedCustomUserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedCustomUserRequest'
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
    delete:
      operationId: users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: string
          format: uuid
        description: A UUID string identifying this user.
        required: true
      tags:
      - users
      security:
      - {}
      responses:
        '204':
          description: No response body
  /api/v1/users/me/:
    get:
      operationId: users_me_retrieve
      tags:
      - users
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomUser'
          description: ''
components:
  schemas:
    Answer:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
        description:
          type: string
        image:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        index:
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
      - id
      - title
    AnswerRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
        description:
          type: string
          minLength: 1
        image:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        index:
          type: integer
          maximum: 2147483647
          minimum: 0
      required:
      - title
    CustomUser:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` argument that
        controls which fields should be displayed.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        avatar:
          type: string
          format: uri
          nullable: true
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 30
        is_active:
          type: boolean
          title: Active
        groups:
          type: array
          items:
            $ref: '#/components/schemas/Nested'
          readOnly: true
      required:
      - email
      - groups
      - id
    CustomUserRequest:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` argument that
        controls which fields should be displayed.
      properties:
        email:
          type: string
          format: email
          minLength: 1
          title: Email address
          maxLength: 254
        avatar:
          type: string
          format: binary
          nullable: true
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 30
        is_active:
          type: boolean
          title: Active
      required:
      - email
    Folder:
      type: object
      description: |-
        A serializer mixin that takes an additional `fields` argument that controls
        which fields should be displayed.
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        children_count:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        inherit_permissions:
          type: boolean
        name:
          type: string
        description:
          type: string
          nullable: true
        favorite:
          type: boolean
        parent:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
      required:
      - children_count
      - created
      - id
      - name
      - parent
      - updated
    FolderRequest:
      type: object
      description: |-
        A serializer mixin that takes an additional `fields` argument that controls
        which fields should be displayed.
      properties:
        inherit_permissions:
          type: boolean
        name:
          type: string
          minLength: 1
        description:
          type: string
          nullable: true
        favorite:
          type: boolean
      required:
      - name
    Kit:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        inherit_permissions:
          type: boolean
        name:
          type: string
        start:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
        parent:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
      required:
      - created
      - id
      - name
      - parent
      - start
      - updated
    KitRequest:
      type: object
      properties:
        inherit_permissions:
          type: boolean
        name:
          type: string
          minLength: 1
      required:
      - name
    Nested:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        inherit_permissions:
          type: boolean
        name:
          type: string
        description:
          type: string
          nullable: true
        favorite:
          type: boolean
        parent:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
      required:
      - created
      - id
      - name
      - parent
      - updated
    NestedRequest:
      type: object
      properties:
        inherit_permissions:
          type: boolean
        name:
          type: string
          minLength: 1
        description:
          type: string
          nullable: true
        favorite:
          type: boolean
      required:
      - name
    Organization:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` argument that
        controls which fields should be displayed.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
        avatar:
          type: string
          format: uri
          nullable: true
        root:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
      required:
      - id
      - name
      - root
    OrganizationRequest:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` argument that
        controls which fields should be displayed.
      properties:
        name:
          type: string
          minLength: 1
        avatar:
          type: string
          format: binary
          nullable: true
      required:
      - name
    PaginatedAnswerList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: integer
          nullable: true
          example: 2
        previous:
          type: integer
          nullable: true
          example: 1
        results:
          type: array
          items:
            $ref: '#/components/schemas/Answer'
    PaginatedCustomUserList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: integer
          nullable: true
          example: 2
        previous:
          type: integer
          nullable: true
          example: 1
        results:
          type: array
          items:
            $ref: '#/components/schemas/CustomUser'
    PaginatedFolderList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: integer
          nullable: true
          example: 2
        previous:
          type: integer
          nullable: true
          example: 1
        results:
          type: array
          items:
            $ref: '#/components/schemas/Folder'
    PaginatedKitList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: integer
          nullable: true
          example: 2
        previous:
          type: integer
          nullable: true
          example: 1
        results:
          type: array
          items:
            $ref: '#/components/schemas/Kit'
    PaginatedOrganizationList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: integer
          nullable: true
          example: 2
        previous:
          type: integer
          nullable: true
          example: 1
        results:
          type: array
          items:
            $ref: '#/components/schemas/Organization'
    PaginatedQuestionList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: integer
          nullable: true
          example: 2
        previous:
          type: integer
          nullable: true
          example: 1
        results:
          type: array
          items:
            $ref: '#/components/schemas/Question'
    PatchedAnswerRequest:
      type: object
      properties:
        title:
          type: string
          minLength: 1
        description:
          type: string
          minLength: 1
        image:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        index:
          type: integer
          maximum: 2147483647
          minimum: 0
    PatchedCustomUserRequest:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` argument that
        controls which fields should be displayed.
      properties:
        email:
          type: string
          format: email
          minLength: 1
          title: Email address
          maxLength: 254
        avatar:
          type: string
          format: binary
          nullable: true
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 30
        is_active:
          type: boolean
          title: Active
    PatchedFolderRequest:
      type: object
      description: |-
        A serializer mixin that takes an additional `fields` argument that controls
        which fields should be displayed.
      properties:
        inherit_permissions:
          type: boolean
        name:
          type: string
          minLength: 1
        description:
          type: string
          nullable: true
        favorite:
          type: boolean
    PatchedKitRequest:
      type: object
      properties:
        inherit_permissions:
          type: boolean
        name:
          type: string
          minLength: 1
    PatchedOrganizationRequest:
      type: object
      description: |-
        A ModelSerializer that takes an additional `fields` argument that
        controls which fields should be displayed.
      properties:
        name:
          type: string
          minLength: 1
        avatar:
          type: string
          format: binary
          nullable: true
    PatchedQuestionRequest:
      type: object
      properties:
        inherit_permissions:
          type: boolean
        title:
          type: string
          minLength: 1
        description:
          type: string
          nullable: true
        image:
          type: string
          format: uri
          nullable: true
          maxLength: 200
    Question:
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        updated:
          type: string
          format: date-time
          readOnly: true
        inherit_permissions:
          type: boolean
        title:
          type: string
        description:
          type: string
          nullable: true
        image:
          type: string
          format: uri
          nullable: true
          maxLength: 200
        next:
          allOf:
          - $ref: '#/components/schemas/Nested'
          readOnly: true
        answers:
          type: array
          items:
            $ref: '#/components/schemas/Nested'
          readOnly: true
      required:
      - answers
      - created
      - id
      - next
      - updated
    QuestionRequest:
      type: object
      properties:
        inherit_permissions:
          type: boolean
        title:
          type: string
          minLength: 1
        description:
          type: string
          nullable: true
        image:
          type: string
          format: uri
          nullable: true
          maxLength: 200
  securitySchemes:
    oauth2:
      type: oauth2
      flows: {}
