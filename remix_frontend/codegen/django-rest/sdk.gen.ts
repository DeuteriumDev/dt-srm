// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options } from '@hey-api/client-fetch';
import type { AnswersListData, AnswersListResponse, AnswersCreateData, AnswersCreateResponse, AnswersDestroyData, AnswersDestroyResponse, AnswersRetrieveData, AnswersRetrieveResponse, AnswersPartialUpdateData, AnswersPartialUpdateResponse, AnswersUpdateData, AnswersUpdateResponse, DocumentsListData, DocumentsListResponse, FoldersListData, FoldersListResponse, FoldersCreateData, FoldersCreateResponse, FoldersDestroyData, FoldersDestroyResponse, FoldersRetrieveData, FoldersRetrieveResponse, FoldersPartialUpdateData, FoldersPartialUpdateResponse, FoldersUpdateData, FoldersUpdateResponse, InvoicesListData, InvoicesListResponse, InvoicesCreateData, InvoicesCreateResponse, InvoicesDestroyData, InvoicesDestroyResponse, InvoicesRetrieveData, InvoicesRetrieveResponse, InvoicesPartialUpdateData, InvoicesPartialUpdateResponse, InvoicesUpdateData, InvoicesUpdateResponse, ItemsListData, ItemsListResponse, ItemsCreateData, ItemsCreateResponse, ItemsDestroyData, ItemsDestroyResponse, ItemsRetrieveData, ItemsRetrieveResponse, ItemsPartialUpdateData, ItemsPartialUpdateResponse, ItemsUpdateData, ItemsUpdateResponse, KitsListData, KitsListResponse, KitsCreateData, KitsCreateResponse, KitsDestroyData, KitsDestroyResponse, KitsRetrieveData, KitsRetrieveResponse, KitsPartialUpdateData, KitsPartialUpdateResponse, KitsUpdateData, KitsUpdateResponse, LineitemsListData, LineitemsListResponse, LineitemsCreateData, LineitemsCreateResponse, LineitemsDestroyData, LineitemsDestroyResponse, LineitemsRetrieveData, LineitemsRetrieveResponse, LineitemsPartialUpdateData, LineitemsPartialUpdateResponse, LineitemsUpdateData, LineitemsUpdateResponse, OrganizationsListData, OrganizationsListResponse, OrganizationsCreateData, OrganizationsCreateResponse, OrganizationsDestroyData, OrganizationsDestroyResponse, OrganizationsRetrieveData, OrganizationsRetrieveResponse, OrganizationsPartialUpdateData, OrganizationsPartialUpdateResponse, OrganizationsUpdateData, OrganizationsUpdateResponse, QuestionsListData, QuestionsListResponse, QuestionsCreateData, QuestionsCreateResponse, QuestionsDestroyData, QuestionsDestroyResponse, QuestionsRetrieveData, QuestionsRetrieveResponse, QuestionsPartialUpdateData, QuestionsPartialUpdateResponse, QuestionsUpdateData, QuestionsUpdateResponse, UsersListData, UsersListResponse, UsersCreateData, UsersCreateResponse, UsersDestroyData, UsersDestroyResponse, UsersRetrieveData, UsersRetrieveResponse, UsersPartialUpdateData, UsersPartialUpdateResponse, UsersUpdateData, UsersUpdateResponse, UsersMeRetrieveData, UsersMeRetrieveResponse } from './types.gen';

export const client = createClient(createConfig());

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const answersList = <ThrowOnError extends boolean = false>(options?: Options<AnswersListData, ThrowOnError>) => {
    return (options?.client ?? client).get<AnswersListResponse, unknown, ThrowOnError>({
        url: '/api/v1/answers/',
        ...options
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const answersCreate = <ThrowOnError extends boolean = false>(options: Options<AnswersCreateData, ThrowOnError>) => {
    return (options?.client ?? client).post<AnswersCreateResponse, unknown, ThrowOnError>({
        url: '/api/v1/answers/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const answersDestroy = <ThrowOnError extends boolean = false>(options: Options<AnswersDestroyData, ThrowOnError>) => {
    return (options?.client ?? client).delete<AnswersDestroyResponse, unknown, ThrowOnError>({
        url: '/api/v1/answers/{id}/',
        ...options
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const answersRetrieve = <ThrowOnError extends boolean = false>(options: Options<AnswersRetrieveData, ThrowOnError>) => {
    return (options?.client ?? client).get<AnswersRetrieveResponse, unknown, ThrowOnError>({
        url: '/api/v1/answers/{id}/',
        ...options
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const answersPartialUpdate = <ThrowOnError extends boolean = false>(options: Options<AnswersPartialUpdateData, ThrowOnError>) => {
    return (options?.client ?? client).patch<AnswersPartialUpdateResponse, unknown, ThrowOnError>({
        url: '/api/v1/answers/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const answersUpdate = <ThrowOnError extends boolean = false>(options: Options<AnswersUpdateData, ThrowOnError>) => {
    return (options?.client ?? client).put<AnswersUpdateResponse, unknown, ThrowOnError>({
        url: '/api/v1/answers/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const documentsList = <ThrowOnError extends boolean = false>(options?: Options<DocumentsListData, ThrowOnError>) => {
    return (options?.client ?? client).get<DocumentsListResponse, unknown, ThrowOnError>({
        url: '/api/v1/documents/',
        ...options
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const foldersList = <ThrowOnError extends boolean = false>(options?: Options<FoldersListData, ThrowOnError>) => {
    return (options?.client ?? client).get<FoldersListResponse, unknown, ThrowOnError>({
        url: '/api/v1/folders/',
        ...options
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const foldersCreate = <ThrowOnError extends boolean = false>(options: Options<FoldersCreateData, ThrowOnError>) => {
    return (options?.client ?? client).post<FoldersCreateResponse, unknown, ThrowOnError>({
        url: '/api/v1/folders/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const foldersDestroy = <ThrowOnError extends boolean = false>(options: Options<FoldersDestroyData, ThrowOnError>) => {
    return (options?.client ?? client).delete<FoldersDestroyResponse, unknown, ThrowOnError>({
        url: '/api/v1/folders/{id}/',
        ...options
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const foldersRetrieve = <ThrowOnError extends boolean = false>(options: Options<FoldersRetrieveData, ThrowOnError>) => {
    return (options?.client ?? client).get<FoldersRetrieveResponse, unknown, ThrowOnError>({
        url: '/api/v1/folders/{id}/',
        ...options
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const foldersPartialUpdate = <ThrowOnError extends boolean = false>(options: Options<FoldersPartialUpdateData, ThrowOnError>) => {
    return (options?.client ?? client).patch<FoldersPartialUpdateResponse, unknown, ThrowOnError>({
        url: '/api/v1/folders/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const foldersUpdate = <ThrowOnError extends boolean = false>(options: Options<FoldersUpdateData, ThrowOnError>) => {
    return (options?.client ?? client).put<FoldersUpdateResponse, unknown, ThrowOnError>({
        url: '/api/v1/folders/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const invoicesList = <ThrowOnError extends boolean = false>(options?: Options<InvoicesListData, ThrowOnError>) => {
    return (options?.client ?? client).get<InvoicesListResponse, unknown, ThrowOnError>({
        url: '/api/v1/invoices/',
        ...options
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const invoicesCreate = <ThrowOnError extends boolean = false>(options: Options<InvoicesCreateData, ThrowOnError>) => {
    return (options?.client ?? client).post<InvoicesCreateResponse, unknown, ThrowOnError>({
        url: '/api/v1/invoices/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const invoicesDestroy = <ThrowOnError extends boolean = false>(options: Options<InvoicesDestroyData, ThrowOnError>) => {
    return (options?.client ?? client).delete<InvoicesDestroyResponse, unknown, ThrowOnError>({
        url: '/api/v1/invoices/{id}/',
        ...options
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const invoicesRetrieve = <ThrowOnError extends boolean = false>(options: Options<InvoicesRetrieveData, ThrowOnError>) => {
    return (options?.client ?? client).get<InvoicesRetrieveResponse, unknown, ThrowOnError>({
        url: '/api/v1/invoices/{id}/',
        ...options
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const invoicesPartialUpdate = <ThrowOnError extends boolean = false>(options: Options<InvoicesPartialUpdateData, ThrowOnError>) => {
    return (options?.client ?? client).patch<InvoicesPartialUpdateResponse, unknown, ThrowOnError>({
        url: '/api/v1/invoices/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const invoicesUpdate = <ThrowOnError extends boolean = false>(options: Options<InvoicesUpdateData, ThrowOnError>) => {
    return (options?.client ?? client).put<InvoicesUpdateResponse, unknown, ThrowOnError>({
        url: '/api/v1/invoices/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const itemsList = <ThrowOnError extends boolean = false>(options?: Options<ItemsListData, ThrowOnError>) => {
    return (options?.client ?? client).get<ItemsListResponse, unknown, ThrowOnError>({
        url: '/api/v1/items/',
        ...options
    });
};

export const itemsCreate = <ThrowOnError extends boolean = false>(options: Options<ItemsCreateData, ThrowOnError>) => {
    return (options?.client ?? client).post<ItemsCreateResponse, unknown, ThrowOnError>({
        url: '/api/v1/items/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const itemsDestroy = <ThrowOnError extends boolean = false>(options: Options<ItemsDestroyData, ThrowOnError>) => {
    return (options?.client ?? client).delete<ItemsDestroyResponse, unknown, ThrowOnError>({
        url: '/api/v1/items/{id}/',
        ...options
    });
};

export const itemsRetrieve = <ThrowOnError extends boolean = false>(options: Options<ItemsRetrieveData, ThrowOnError>) => {
    return (options?.client ?? client).get<ItemsRetrieveResponse, unknown, ThrowOnError>({
        url: '/api/v1/items/{id}/',
        ...options
    });
};

export const itemsPartialUpdate = <ThrowOnError extends boolean = false>(options: Options<ItemsPartialUpdateData, ThrowOnError>) => {
    return (options?.client ?? client).patch<ItemsPartialUpdateResponse, unknown, ThrowOnError>({
        url: '/api/v1/items/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const itemsUpdate = <ThrowOnError extends boolean = false>(options: Options<ItemsUpdateData, ThrowOnError>) => {
    return (options?.client ?? client).put<ItemsUpdateResponse, unknown, ThrowOnError>({
        url: '/api/v1/items/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const kitsList = <ThrowOnError extends boolean = false>(options?: Options<KitsListData, ThrowOnError>) => {
    return (options?.client ?? client).get<KitsListResponse, unknown, ThrowOnError>({
        url: '/api/v1/kits/',
        ...options
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const kitsCreate = <ThrowOnError extends boolean = false>(options: Options<KitsCreateData, ThrowOnError>) => {
    return (options?.client ?? client).post<KitsCreateResponse, unknown, ThrowOnError>({
        url: '/api/v1/kits/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const kitsDestroy = <ThrowOnError extends boolean = false>(options: Options<KitsDestroyData, ThrowOnError>) => {
    return (options?.client ?? client).delete<KitsDestroyResponse, unknown, ThrowOnError>({
        url: '/api/v1/kits/{id}/',
        ...options
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const kitsRetrieve = <ThrowOnError extends boolean = false>(options: Options<KitsRetrieveData, ThrowOnError>) => {
    return (options?.client ?? client).get<KitsRetrieveResponse, unknown, ThrowOnError>({
        url: '/api/v1/kits/{id}/',
        ...options
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const kitsPartialUpdate = <ThrowOnError extends boolean = false>(options: Options<KitsPartialUpdateData, ThrowOnError>) => {
    return (options?.client ?? client).patch<KitsPartialUpdateResponse, unknown, ThrowOnError>({
        url: '/api/v1/kits/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const kitsUpdate = <ThrowOnError extends boolean = false>(options: Options<KitsUpdateData, ThrowOnError>) => {
    return (options?.client ?? client).put<KitsUpdateResponse, unknown, ThrowOnError>({
        url: '/api/v1/kits/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const lineitemsList = <ThrowOnError extends boolean = false>(options?: Options<LineitemsListData, ThrowOnError>) => {
    return (options?.client ?? client).get<LineitemsListResponse, unknown, ThrowOnError>({
        url: '/api/v1/lineitems/',
        ...options
    });
};

export const lineitemsCreate = <ThrowOnError extends boolean = false>(options: Options<LineitemsCreateData, ThrowOnError>) => {
    return (options?.client ?? client).post<LineitemsCreateResponse, unknown, ThrowOnError>({
        url: '/api/v1/lineitems/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const lineitemsDestroy = <ThrowOnError extends boolean = false>(options: Options<LineitemsDestroyData, ThrowOnError>) => {
    return (options?.client ?? client).delete<LineitemsDestroyResponse, unknown, ThrowOnError>({
        url: '/api/v1/lineitems/{id}/',
        ...options
    });
};

export const lineitemsRetrieve = <ThrowOnError extends boolean = false>(options: Options<LineitemsRetrieveData, ThrowOnError>) => {
    return (options?.client ?? client).get<LineitemsRetrieveResponse, unknown, ThrowOnError>({
        url: '/api/v1/lineitems/{id}/',
        ...options
    });
};

export const lineitemsPartialUpdate = <ThrowOnError extends boolean = false>(options: Options<LineitemsPartialUpdateData, ThrowOnError>) => {
    return (options?.client ?? client).patch<LineitemsPartialUpdateResponse, unknown, ThrowOnError>({
        url: '/api/v1/lineitems/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const lineitemsUpdate = <ThrowOnError extends boolean = false>(options: Options<LineitemsUpdateData, ThrowOnError>) => {
    return (options?.client ?? client).put<LineitemsUpdateResponse, unknown, ThrowOnError>({
        url: '/api/v1/lineitems/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const organizationsList = <ThrowOnError extends boolean = false>(options?: Options<OrganizationsListData, ThrowOnError>) => {
    return (options?.client ?? client).get<OrganizationsListResponse, unknown, ThrowOnError>({
        url: '/api/v1/organizations/',
        ...options
    });
};

export const organizationsCreate = <ThrowOnError extends boolean = false>(options: Options<OrganizationsCreateData, ThrowOnError>) => {
    return (options?.client ?? client).post<OrganizationsCreateResponse, unknown, ThrowOnError>({
        url: '/api/v1/organizations/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const organizationsDestroy = <ThrowOnError extends boolean = false>(options: Options<OrganizationsDestroyData, ThrowOnError>) => {
    return (options?.client ?? client).delete<OrganizationsDestroyResponse, unknown, ThrowOnError>({
        url: '/api/v1/organizations/{id}/',
        ...options
    });
};

export const organizationsRetrieve = <ThrowOnError extends boolean = false>(options: Options<OrganizationsRetrieveData, ThrowOnError>) => {
    return (options?.client ?? client).get<OrganizationsRetrieveResponse, unknown, ThrowOnError>({
        url: '/api/v1/organizations/{id}/',
        ...options
    });
};

export const organizationsPartialUpdate = <ThrowOnError extends boolean = false>(options: Options<OrganizationsPartialUpdateData, ThrowOnError>) => {
    return (options?.client ?? client).patch<OrganizationsPartialUpdateResponse, unknown, ThrowOnError>({
        url: '/api/v1/organizations/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const organizationsUpdate = <ThrowOnError extends boolean = false>(options: Options<OrganizationsUpdateData, ThrowOnError>) => {
    return (options?.client ?? client).put<OrganizationsUpdateResponse, unknown, ThrowOnError>({
        url: '/api/v1/organizations/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const questionsList = <ThrowOnError extends boolean = false>(options?: Options<QuestionsListData, ThrowOnError>) => {
    return (options?.client ?? client).get<QuestionsListResponse, unknown, ThrowOnError>({
        url: '/api/v1/questions/',
        ...options
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const questionsCreate = <ThrowOnError extends boolean = false>(options?: Options<QuestionsCreateData, ThrowOnError>) => {
    return (options?.client ?? client).post<QuestionsCreateResponse, unknown, ThrowOnError>({
        url: '/api/v1/questions/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const questionsDestroy = <ThrowOnError extends boolean = false>(options: Options<QuestionsDestroyData, ThrowOnError>) => {
    return (options?.client ?? client).delete<QuestionsDestroyResponse, unknown, ThrowOnError>({
        url: '/api/v1/questions/{id}/',
        ...options
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const questionsRetrieve = <ThrowOnError extends boolean = false>(options: Options<QuestionsRetrieveData, ThrowOnError>) => {
    return (options?.client ?? client).get<QuestionsRetrieveResponse, unknown, ThrowOnError>({
        url: '/api/v1/questions/{id}/',
        ...options
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const questionsPartialUpdate = <ThrowOnError extends boolean = false>(options: Options<QuestionsPartialUpdateData, ThrowOnError>) => {
    return (options?.client ?? client).patch<QuestionsPartialUpdateResponse, unknown, ThrowOnError>({
        url: '/api/v1/questions/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

/**
 * This viewset provides dynamically generated
 * filters by applying defined filters on generic
 * queryset.
 */
export const questionsUpdate = <ThrowOnError extends boolean = false>(options: Options<QuestionsUpdateData, ThrowOnError>) => {
    return (options?.client ?? client).put<QuestionsUpdateResponse, unknown, ThrowOnError>({
        url: '/api/v1/questions/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const usersList = <ThrowOnError extends boolean = false>(options?: Options<UsersListData, ThrowOnError>) => {
    return (options?.client ?? client).get<UsersListResponse, unknown, ThrowOnError>({
        url: '/api/v1/users/',
        ...options
    });
};

export const usersCreate = <ThrowOnError extends boolean = false>(options: Options<UsersCreateData, ThrowOnError>) => {
    return (options?.client ?? client).post<UsersCreateResponse, unknown, ThrowOnError>({
        url: '/api/v1/users/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const usersDestroy = <ThrowOnError extends boolean = false>(options: Options<UsersDestroyData, ThrowOnError>) => {
    return (options?.client ?? client).delete<UsersDestroyResponse, unknown, ThrowOnError>({
        url: '/api/v1/users/{id}/',
        ...options
    });
};

export const usersRetrieve = <ThrowOnError extends boolean = false>(options: Options<UsersRetrieveData, ThrowOnError>) => {
    return (options?.client ?? client).get<UsersRetrieveResponse, unknown, ThrowOnError>({
        url: '/api/v1/users/{id}/',
        ...options
    });
};

export const usersPartialUpdate = <ThrowOnError extends boolean = false>(options: Options<UsersPartialUpdateData, ThrowOnError>) => {
    return (options?.client ?? client).patch<UsersPartialUpdateResponse, unknown, ThrowOnError>({
        url: '/api/v1/users/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const usersUpdate = <ThrowOnError extends boolean = false>(options: Options<UsersUpdateData, ThrowOnError>) => {
    return (options?.client ?? client).put<UsersUpdateResponse, unknown, ThrowOnError>({
        url: '/api/v1/users/{id}/',
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        }
    });
};

export const usersMeRetrieve = <ThrowOnError extends boolean = false>(options?: Options<UsersMeRetrieveData, ThrowOnError>) => {
    return (options?.client ?? client).get<UsersMeRetrieveResponse, unknown, ThrowOnError>({
        url: '/api/v1/users/me/',
        ...options
    });
};